/*
tuya_iot_config.h
Copyright(C),2018-2020, 涂鸦科技 www.tuya.comm
*/

/* AUTO-GENERATED FILE. DO NOT MODIFY !!!
*
* This config file is automatically generated by tuya cross-build system.
* It should not be modified by hand.
*/

#ifndef TUYA_IOT_CONFIG_H
#define TUYA_IOT_CONFIG_H

#ifdef __cplusplus
extern "C" {
#endif

/* default definitons */

#define SYSTEM_SMALL_MEMORY_BEGIN       0       /*small memory systems begin */
#define SYSTEM_REALTEK8710_1M           1
#define SYSTEM_REALTEK8710_2M           2
#define SYSTEM_NON_OS                   3       /*no operating system*/
#define SYSTEM_FREERTOS                 98
#define SYSTEM_SMALL_MEMORY_END         99      /*small memory systems end */
#define SYSTEM_LINUX                    100
#define SYSTEM_LITEOS                   120

#define TLS_DISABLE                     0       /* disable tls function */
#define TLS_TUYA_PSK_ONLY               2       /* only enable ciper 0xAE */
#define TLS_TUYA_ECC_PSK                3       /* enable ciper 0xAE && 0xC027 */
#define TLS_TUYA_ECC_ONLY               4       /* only enable ciper 0xC027 */
#define TLS_TUYA_ECC_ONLY_NOSTRIP       5       /* only enable ciper 0xC027, but enable most of mbed-tls configs */
#define TLS_TUYA_ECC_CLIENT_AUTH        6       /* TLS Client Authentication and Server Authentication mode */


#define TUYA_OPERATOR_DISABLE           0x0
#define TUYA_OPERATOR_CUCC              0x01
#define TUYA_OPERATOR_CTCC              0x02
#define TUYA_OPERATOR_CMCC              0x04
#define TUYA_OPERATOR_CMCC_ANDLINK      0x08
#define TUYA_OPERATOR_ALL               (TUYA_OPERATOR_CUCC | TUYA_OPERATOR_CTCC | TUYA_OPERATOR_CMCC)

/* custom settings */
// Generated by Tuya (https://www.tuya.com)
// 基于项目 tuyaos-subdev-bt (0.5.2)
// 基于工具链 phy6222_ble (0.1.1)

#define ENABLE_TAL_BLUETOOTH 1

#define TAL_BLUETOOTH 1

#define TAL_BLE_SERVICE_VERSION 2


// CONFIG_TAL_UART_MODE_CACHE is not set

#define TAL_UART_MODE_NOCACHE 1

#define TAL_UART_NUM 2


// CONFIG_ENABLE_LOG is not set

#define STACK_SIZE_TIMERQ 4096

#define TUYA_BLE_FEATURE_PRODUCT_TEST_ENABLE 1

#define TUYA_BLE_FEATURE_OTA_ENABLE 1

// CONFIG_TUYA_SDK_TEST is not set

#define TUYA_SDK_TEST_TYPE 1


#define ENABLE_RTC 1

#define ENABLE_ADC 1

#define ENABLE_UART 1

#define ENABLE_UART_INTERRUPT 1

#define ENABLE_WATCHDOG 1

#define ENABLE_PWM 1

#define ENABLE_GPIO 1

#define ENABLE_I2C 1

#define ENABLE_SPI 1

#define ENABLE_BLUETOOTH 1

// CONFIG_ENABLE_BLUETOOTH_MESH is not set

#define OPERATING_SYSTEM 3

#define LITTLE_END 1

// CONFIG_ENABLE_FILE_SYSTEM is not set

// CONFIG_ENABLE_FLASH is not set

#define ENABLE_TIMER 1


// CONFIG_ENABLE_PLATFORM_AES is not set

// CONFIG_ENABLE_PLATFORM_SHA256 is not set

// CONFIG_ENABLE_PLATFORM_MD5 is not set

// CONFIG_ENABLE_PLATFORM_SHA1 is not set

// CONFIG_ENABLE_PLATFORM_RSA is not set

// CONFIG_ENABLE_PLATFORM_ECC is not set

// CONFIG_ENABLE_WAKEUP is not set

#if defined (__IAR_SYSTEMS_ICC__) //for ICCARM
    #define STRINGIZE(X) #X
    #define TUYA_PACK_START(X) _Pragma(STRINGIZE(pack(X)))
    #define TUYA_PACK_END()    _Pragma("pack()")
#elif defined(__CC_ARM)
    #define STRINGIZE(X) #X
    #define TUYA_PACK_START(X) _Pragma(STRINGIZE(pack(X)))
    #define TUYA_PACK_END()    _Pragma("pack()")
#else
    #define STRINGIZE(X) #X
    #define TUYA_PACK_START(X) _Pragma(STRINGIZE(pack(X)))
    #define TUYA_PACK_END()    _Pragma("pack()")
#endif


#ifndef TUYA_WEAK_ATTRIBUTE
    #if defined (__IAR_SYSTEMS_ICC__) //for ICCARM
        #define TUYA_WEAK_ATTRIBUTE __weak
    #elif defined(__CC_ARM)
        #define TUYA_WEAK_ATTRIBUTE __attribute__ ((weak))
    #else //for GCC
        #define TUYA_WEAK_ATTRIBUTE __attribute__ ((weak))
    #endif
#endif
/* custom settings */
#include "app_config.h"


#ifdef __cplusplus
}
#endif


#endif
