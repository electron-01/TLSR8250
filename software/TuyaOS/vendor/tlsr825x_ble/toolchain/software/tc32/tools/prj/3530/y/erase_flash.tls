///////////////////////////////////////////////////
// type: 1 for byte; 2 for short; 4 for word
//
//	a=p_rd_reg	(adr, type)
//	a=p_rd_mem	(adr, offset, len)
//	a=p_rd_fifo	(adr, offset, len)
//	a=p_wr_reg	(adr, dat, type)
//	a=p_wr_mem	(adr, offset, len)
//	a=p_wr_fifo	(adr, offset, len)
//	a=p_get_buf	(index, type)		# get data indexed at working buffer
//	a=p_set_buf	(index, dat, type)	# set data indexed at working buffer
//	a=p_ld_buf	(offset, len)
//	a=p_dis_buf	(offset, len)
//	a=p_get_adr	(offset, type)		# return address argument
//	a=p_get_size	(offset, type)		# return size argument
///////////////////////////////////////////////////

t0 = tick (1)

l = p_get_size (0, 4)
a = p_get_adr  (0, 4)
m = 256				//spi flash program based on page size 256
//m = 1024 * 128

a = wr_reg (0x602, 0x05, 1)	// reset mcu
a = wr_reg (0x0d, 0x01, 1)	// set csn high

a = wr_reg (0x0d, 0x00, 1)	// set csn low
a = wr_reg (0x0c, 0x06, 1)	// send write enable command
a = wr_reg (0x0d, 0x01, 1)	// set csn high

a = wr_reg (0x0d, 0x00, 1)	// set csn low
a = wr_reg (0x0c, 0xc7, 1)	// send chip erase command
//a = wr_reg (0x0c, 0xd8, 1)	// send block erase command
//a = wr_reg (0x0c, 0x00, 1)	// send block erase command
//a = wr_reg (0x0c, 0x00, 1)	// send block erase command
//a = wr_reg (0x0c, 0x00, 1)	// send block erase command
a = wr_reg (0x0d, 0x01, 1)	// set csn high


t = tick(1) - t0
print "total time: ", t, "ms"